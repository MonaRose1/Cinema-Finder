{"version":3,"file":"static/js/558.52d32e4a.chunk.js","mappings":"+JAEA,MAAMA,GAAaC,EAAAA,EAAAA,eAAc,MACpBC,EAAgBA,KAAMC,EAAAA,EAAAA,YAAWH,GAEjCI,EAAqBJ,EAAWK,SAC7C,G,wFCFA,MAYA,EAZ4BC,KAC1B,MAAM,OAAEC,IAAWL,EAAAA,EAAAA,OACb,QAAEM,IAAYC,EAAAA,EAAAA,KAEpB,OAAOD,EAAQE,IAAI,CAACC,EAAQC,IACA,kBAAfD,EAAOE,KAA0C,kBAAfF,EAAOG,IAAyB,MAE3EC,EAAAA,EAAAA,KAACR,EAAM,CAACM,IAAKF,EAAOE,IAAKG,IAAKL,EAAOG,KAAUF,I,wFCFrD,MAAMK,E,QAAoBC,EAAWR,IAAKC,IAAM,IAC3CA,EACHQ,KAAKC,EAAAA,EAAAA,IAAM,CAACT,EAAOG,IAAKH,EAAOE,SAG3BQ,GAAwBC,EAAAA,EAAAA,SAAQ,CAACT,EAAKC,KAE1C,MAAMS,GAAWH,EAAAA,EAAAA,IAAM,CAACN,EAAKD,IAI7B,OAAOW,EAAAA,EAAAA,QACLP,EAAkBP,IAAKC,IAAM,IACxBA,EACHc,UAAUA,EAAAA,EAAAA,GAASF,EAAUZ,EAAOQ,QAEtC,cAsCJ,EAlCyBV,KAEvB,MAAM,OACJiB,EAAM,YACNC,EAAW,uBACXC,EAAsB,qBACtBC,IACEC,EAAAA,EAAAA,MACJC,EAAAA,EAAAA,WAAU,KACHF,GACHF,KAID,IAEH,MAAMnB,GAAUwB,EAAAA,EAAAA,SAAQ,IACjBN,EAGEL,EAAsBK,EAAOO,SAAUP,EAAOQ,WAAWC,MAC9D,EACA,IALkB,GAOnB,CAACT,IAGJ,MAAO,CACLE,yBACAC,uBACAH,SACAlB,W","sources":["components/Map/context.js","components/NearbyCinemaMarkers.jsx","data/nearbyCinemas.js"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nconst MapContext = createContext(null);\r\nexport const useMapContext = () => useContext(MapContext);\r\n\r\nexport const MapContextProvider = MapContext.Provider;\r\nexport default MapContext;","import React from 'react';\r\nimport useNearbyCinemas from \"../data/nearbyCinemas\";\r\nimport { useMapContext } from './Map/context';\r\n\r\nconst NearbyCinemaMarkers = () => {\r\n  const { Marker } = useMapContext();\r\n  const { cinemas } = useNearbyCinemas();\r\n\r\n  return cinemas.map((cinema, idx) => {\r\n    if (typeof cinema.lat !== 'number' || typeof cinema.lng !== 'number') return null;\r\n    return (\r\n      <Marker lat={cinema.lat} lon={cinema.lng} key={idx} />\r\n    )\r\n  })\r\n};\r\n\r\nexport default NearbyCinemaMarkers;","import { useEffect, useMemo } from \"react\";\r\nimport { useGeolocated } from \"react-geolocated\";\r\nimport { point } from \"@turf/helpers\";\r\nimport distance from \"@turf/distance\";\r\nimport { sortBy, memoize } from \"lodash\";\r\nimport allCinemas from \"./cinemas\";\r\n\r\n// Manually add a point to each cinema this is to be used during comparisons later\r\n// and will prevent this point needing to be regenerated every time we're recompute & sorting cinemas.\r\nconst cinemasWithPoints = allCinemas.map((cinema) => ({\r\n  ...cinema,\r\n  loc: point([cinema.lng, cinema.lat])\r\n}));\r\n\r\nconst computeCinemaDistance = memoize((lat, lng) => {\r\n  // Create this point to use later for the same reason as above.\r\n  const location = point([lng, lat]);\r\n\r\n  // Compute and add distance between point above and the cinema's point\r\n  // then sortBy distance\r\n  return sortBy(\r\n    cinemasWithPoints.map((cinema) => ({\r\n      ...cinema,\r\n      distance: distance(location, cinema.loc)\r\n    })),\r\n    \"distance\"\r\n  );\r\n});\r\n\r\nconst useNearbyCinemas = () => {\r\n  // Use library's hook to get coords of location\r\n  const {\r\n    coords,\r\n    getPosition,\r\n    isGeolocationAvailable,\r\n    isGeolocationEnabled\r\n  } = useGeolocated();\r\n  useEffect(() => {\r\n    if (!isGeolocationEnabled) {\r\n      getPosition();\r\n    }\r\n    // Disabling eslint's warning as we want this to only occur onMount\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const cinemas = useMemo(() => {\r\n    if (!coords) return [];\r\n\r\n    // when we have coords, find nearest 15 cinemas\r\n    return computeCinemaDistance(coords.latitude, coords.longitude).slice(\r\n      0,\r\n      15\r\n    );\r\n  }, [coords]);\r\n\r\n  // return status of location api lookup and list of cinemas\r\n  return {\r\n    isGeolocationAvailable,\r\n    isGeolocationEnabled,\r\n    coords,\r\n    cinemas\r\n  };\r\n};\r\nexport default useNearbyCinemas;\r\n"],"names":["MapContext","createContext","useMapContext","useContext","MapContextProvider","Provider","NearbyCinemaMarkers","Marker","cinemas","useNearbyCinemas","map","cinema","idx","lat","lng","_jsx","lon","cinemasWithPoints","allCinemas","loc","point","computeCinemaDistance","memoize","location","sortBy","distance","coords","getPosition","isGeolocationAvailable","isGeolocationEnabled","useGeolocated","useEffect","useMemo","latitude","longitude","slice"],"sourceRoot":""}