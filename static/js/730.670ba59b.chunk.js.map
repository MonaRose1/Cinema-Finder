{"version":3,"file":"static/js/730.670ba59b.chunk.js","mappings":"+JAEA,MAAMA,GAAaC,EAAAA,EAAAA,eAAc,MACpBC,EAAgBA,KAAMC,EAAAA,EAAAA,YAAWH,GAEjCI,EAAqBJ,EAAWK,SAC7C,G,oKCIAC,IAAAA,YAAyBC,IAEzB,MAAMC,EAAiBC,IAAA,IAAC,IAAEC,EAAG,IAAEC,GAAKF,EAAA,OAClCG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,UAAWH,EAAKI,SAAUL,EAAKM,OAAO,YAG1CC,EAAgBC,IAAA,IAAEC,EAAGC,EAAGC,EAAGC,GAAEJ,EAAA,MAAM,CAGvC,CAACC,EAAGC,GAAI,CAACC,EAAGC,KAGRC,EAA2BA,KAC/B,MAAM,gBAAEC,IAAoBC,EAAAA,EAAAA,MACtBC,GAAMC,EAAAA,EAAAA,MAASC,QAiBrB,OAhBAC,EAAAA,EAAAA,GAAiB,aAAcC,IAA+B,IAA5BC,QAAQ,IAAErB,EAAG,IAAEsB,IAAOF,EAGtDG,QAAQC,IAAI,8CAEZ,IAEER,EAAIS,MAAM,CACRC,OAAQ,CAAC1B,EAAKsB,GACdK,KAAM,IAEV,CAAE,MAAOhB,GACPY,QAAQK,MAAMjB,GACdG,EAAgB,mDAAoD,CAAEe,QAAS,SACjF,IAEK,MAqBT,EAlBoBC,IAAmB,IAAlB,SAAEC,GAAUD,EAE/B,OADAP,QAAQC,IAAI,wBAEVQ,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,OAAQtC,IACRuC,SAAS,+EACTC,iBAAkB,CAChBC,OAAQ9B,EAAc+B,EAAAA,IAExBC,QAAS,GAAGR,SAAA,EAEZ7B,EAAAA,EAAAA,KAACW,EAAwB,KACzBX,EAAAA,EAAAA,KAACR,EAAAA,GAAkB,CAAC8C,MAAO,CAAErC,OAAQL,GAAiBiC,SACnDA,O,kCCvDT,MASaO,EAJmBG,OAAOC,OALjB,CACpBC,GAAI,CAAC,YAAa,UAAW,YAAa,WAC1CC,GAAI,CAAC,YAAa,UAAW,YAAa,aAOAC,OAC1C,CAAA9C,EAAAS,KAAA,IAAEsC,EAAIC,EAAIC,EAAIC,GAAGlD,GAAGmD,EAAIC,EAAIC,EAAIC,GAAG7C,EAAA,MAAM,CACvC8C,KAAKC,IAAIT,EAAII,GACbI,KAAKC,IAAIR,EAAII,GACbG,KAAKE,IAAIR,EAAII,GACbE,KAAKE,IAAIP,EAAII,K","sources":["components/Map/context.js","components/Map/MaplibreMap.jsx","data/bounds.js"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nconst MapContext = createContext(null);\r\nexport const useMapContext = () => useContext(MapContext);\r\n\r\nexport const MapContextProvider = MapContext.Provider;\r\nexport default MapContext;","import React from 'react';\r\nimport 'maplibre-gl/dist/maplibre-gl.css';\r\nimport Map, { Marker, useMap } from 'react-map-gl';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport maplibregl from 'maplibre-gl';\r\nimport useEventListener from '@use-it/event-listener';\r\nimport { useSnackbar } from 'notistack';\r\nimport { MapContextProvider } from './context';\r\nimport { totalBounds } from '../../data/bounds';\r\nimport maplibreglWorker from \"maplibre-gl/dist/maplibre-gl-csp-worker\";\r\nmaplibregl.workerClass = maplibreglWorker;\r\n\r\nconst MaplibreMarker = ({ lat, lon }) => (\r\n  <Marker longitude={lon} latitude={lat} anchor=\"bottom\" />\r\n)\r\n\r\nconst convertBounds = ([w, s, e, n]) => ([\r\n  // MapLibre expects bounds to be [LngLatBoundsLike](https://maplibre.org/maplibre-gl-js-docs/api/geography/#lnglatboundslike)\r\n  // as such the are either LngLat objects in [sw, ne] order or an array of numbers in [w, s, e, n] order.\r\n  [w, s], [e, n]\r\n]);\r\n\r\nconst MapSnappingEventListener = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const map = useMap().current;\r\n  useEventListener('map.snapTo', ({ detail: { lat, lng } }) => {\r\n    // This hook sets up an event listener for the map.snapTo event which\r\n    // is currently dispatched be an onClick function in CinemaListItem \r\n    console.log('executing `map.snapTo` event with maplibre')\r\n\r\n    try {\r\n      // [Docs](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#flyto)\r\n      map.flyTo({\r\n        center: [lat, lng],\r\n        zoom: 14,\r\n      })\r\n    } catch (e) {\r\n      console.error(e);\r\n      enqueueSnackbar('Unexpected error while attempting map navigation', { variant: 'error' });\r\n    }\r\n  })\r\n  return null;\r\n};\r\n\r\nconst MaplibreMap = ({ children }) => {\r\n  console.log(\"render Maplibre map\");\r\n  return (\r\n    <Map\r\n      mapLib={maplibregl}\r\n      mapStyle=\"https://api.maptiler.com/maps/streets-v2/style.json?key=46DCXvzkGNIvqAgCljGV\"\r\n      initialViewState={{\r\n        bounds: convertBounds(totalBounds),\r\n      }}\r\n      padding={24}\r\n    >\r\n      <MapSnappingEventListener />\r\n      <MapContextProvider value={{ Marker: MaplibreMarker }}>\r\n        {children}\r\n      </MapContextProvider>\r\n    </Map>\r\n  );\r\n};\r\nexport default MaplibreMap;\r\n","// Country bounds drawn via http://bboxfinder.com/\r\n// they are currently in the follow format [W, S, E, N]\r\nconst countryBounds = {\r\n  au: [112.669086, -43.696673, 153.726368, -10.737187],\r\n  nz: [166.332922, -47.292562, 178.573837, -34.394162],\r\n}\r\n// 166.509144322, -46.641235447, 178.517093541, -34.4506617165\r\nexport const allCountryBounds = Object.values(countryBounds);\r\n// latitude is West (-) to East (+)\r\n// longitude is North (+) to South (-)\r\n\r\nexport const totalBounds = allCountryBounds.reduce(\r\n  ([w1, s1, e1, n1], [w2, s2, e2, n2]) => ([\r\n    Math.min(w1, w2),\r\n    Math.min(s1, s2),\r\n    Math.max(e1, e2),\r\n    Math.max(n1, n2),\r\n  ])\r\n)"],"names":["MapContext","createContext","useMapContext","useContext","MapContextProvider","Provider","maplibregl","maplibreglWorker","MaplibreMarker","_ref","lat","lon","_jsx","Marker","longitude","latitude","anchor","convertBounds","_ref2","w","s","e","n","MapSnappingEventListener","enqueueSnackbar","useSnackbar","map","useMap","current","useEventListener","_ref3","detail","lng","console","log","flyTo","center","zoom","error","variant","_ref4","children","_jsxs","Map","mapLib","mapStyle","initialViewState","bounds","totalBounds","padding","value","Object","values","au","nz","reduce","w1","s1","e1","n1","w2","s2","e2","n2","Math","min","max"],"sourceRoot":""}